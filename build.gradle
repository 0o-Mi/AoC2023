plugins {
    id 'java'
    id 'pmd'
    id 'jacoco'
}

group = 'code'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '21'

repositories {
    mavenCentral()
}

ext {
    lombokVersion = '1.18.22'
    springVersion = '6.1.1'
    junitVersion = '5.10.0'
}

dependencies {
//    implementation "org.springframework:spring-core:$springVersion"
//    implementation "org.springframework:spring-beans:$springVersion"
//    implementation "org.springframework:spring-context:$springVersion"
//    implementation "org.springframework:spring-context-support:$springVersion"
//    implementation "org.springframework:spring-expression:5.3.26"

//    compileOnly "org.projectlombok:lombok:$lombokVersion"
//    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
//    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
//    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
//
//    implementation "ch.qos.logback:logback-classic:1.2.9"
//    implementation "org.slf4j:slf4j-api:1.7.36"
//
//    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
//    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
//    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
//
//    implementation "de.elnarion.util:plantuml-generator-util:2.3.0"

}

//jar {
//    manifest {
//        attributes 'MainRunner-Class': 'code.Main'
//    }
//    from {
//        configurations.runtimeClasspath.collect {
//            it.directory ? it : zipTree(it)
//        }
//    }
//}

// To turn on only consoleOutput, comment rest, priority doesn't seem to work, it passes no matter what
pmd {
    consoleOutput = false
    toolVersion = "6.21.0"
    rulesMinimumPriority = 5
    ruleSets = ["category/java/errorprone.xml", "category/java/bestpractices.xml"]
}

test {
    useJUnitPlatform()
    testLogging {
        events "skipped", "failed"
    }
    finalizedBy jacocoTestReport
}
jacoco {
    toolVersion = "0.8.7"
}
jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
        }
    }
}
check.dependsOn jacocoTestCoverageVerification


